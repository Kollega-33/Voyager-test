<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_form_swimming</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>object_form_default</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables

phy_fixed_rotation = true;

vspd = 0;
hspd = 0;
spd = 5;
movespeed = 4;
jumpspeed = 8.5;
grav = 0.2;
sgrav = grav;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move the player in the step event

var right_key = keyboard_check  (vk_right) || keyboard_check(ord("D"));
var left_key = - ( keyboard_check  (vk_left) || keyboard_check(ord("A")) );
var up_key =  - ( keyboard_check  (vk_up) || keyboard_check(ord("W")) );
var down_key = keyboard_check  (vk_down) || keyboard_check(ord("S"));
var space_key = keyboard_check_pressed(vk_space);
var one_form = keyboard_check_pressed(vk_f1);

move = left_key + right_key;
hspd = move * movespeed;
//fly
if !phy_active{
    move_vertical =  down_key + up_key;
    vspd = move_vertical * movespeed;
}
if ( vspd &lt; 10 ){
    vspd += grav;
}
if space_key{
    phy_active = !phy_active;
    if grav == 0{
        grav = sgrav;       
    }else{
        grav = 0;
    }
}
if ( place_meeting(phy_position_x,phy_position_y+1, obj_wall)||
    place_meeting(phy_position_x,phy_position_y+1, obj_ramp) ||
    place_meeting(phy_position_x,phy_position_y+1, obj_girder)){
    vspd = space_key * -jumpspeed;
}


phy_position_x += hspd;
phy_position_y += vspd;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>256,256</point>
    <point>256,256</point>
  </PhysicsShapePoints>
</object>
